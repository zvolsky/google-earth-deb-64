vs_2_0
// cgc version 2.2.0017, build date Jan 29 2010
// command line args: -profile vs_2_0 -quiet
//vendor NVIDIA Corporation
//version 2.2.0.17
//profile vs_2_0
//program vmain
//semantic vmain.batch_model_view_proj
//semantic vmain.batch_camera_location
//semantic vmain.lightDirection
//semantic vmain.treeRotationVector
//semantic vmain.treePosAndScale
//semantic vmain.lod_profile
//semantic vmain.materialDiffuse
//var float3 sIn.m_vPosition : $vin.POSITION0 : ATTR0 : 0 : 1
//var float3 sIn.m_vNormal : $vin.NORMAL0 : ATTR1 : 0 : 1
//var float4 sIn.m_vTangent : $vin.TEXCOORD0 : ATTR2 : 0 : 1
//var float4 sIn.m_vBinormal : $vin.TEXCOORD1 : ATTR3 : 0 : 1
//var float4 sIn.m_vLodPosition : $vin.TEXCOORD2 : ATTR4 : 0 : 1
//var float4 sIn.m_vUnused1 : $vin.TEXCOORD3 :  : 0 : 0
//var float4x4 batch_model_view_proj :  : c[0], 4 : 1 : 1
//var float3 batch_camera_location :  : c[4] : 2 : 1
//var float3 lightDirection :  : c[5] : 3 : 1
//var float4 treeRotationVector :  : c[6] : 4 : 1
//var float4 treePosAndScale :  : c[7] : 5 : 1
//var float4 lod_profile :  : c[8] : 6 : 1
//var float4 materialDiffuse :  : c[9] : 7 : 1
//var float4 vmain.m_vPosition : $vout.POSITION : HPOS : -1 : 1
//var float4 vmain.m_vDiffuseTexCoords : $vout.TEXCOORD0 : TEX0 : -1 : 1
//var float4 vmain.m_vNormalVec : $vout.TEXCOORD1 : TEX1 : -1 : 1
//const c[10] = 0 1 0.44999999
def c10, 0.00000000, 1.00000000, 0.44999999, 0
dcl_position0 v0
dcl_normal0 v1
dcl_texcoord0 v2
dcl_texcoord1 v3
dcl_texcoord2 v4
mov r0.xyz, v4
add r0.xyz, v0, -r0
mov r1.xy, c6
mov r1.w, c10.x
mad r0.yzw, r0.xxyz, c6.z, v4.xxyz
mov r1.z, -c6.x
dp3 r0.x, r1.yxww, r0.yzww
dp3 r0.y, r1.zyww, r0.yzww
mov r0.z, r0.w
mad r0.xyz, r0, c7.w, c7
mov r0.w, c10.y
dp4 oPos.w, r0, c3
dp4 oPos.z, r0, c2
dp4 oPos.y, r0, c1
dp4 oPos.x, r0, c0
add r0.w, c8, -c8.z
dp3 r0.x, r1.yxww, v1
mov r0.z, v1
dp3 r0.y, r1.zyww, v1
dp3 oT1.z, r0, c5
dp3 r0.x, r1.yxww, v3
mov r0.z, v3
dp3 r0.y, r1.zyww, v3
dp3 oT1.y, r0, c5
mov r0.xyz, c7
add r0.xyz, -c4, r0
dp3 r0.y, r0, r0
mul r0.w, r0, c10.z
add r0.x, r0.w, c8.z
add r0.z, -r0.x, c8.w
rsq r0.y, r0.y
rcp r0.y, r0.y
add r0.x, r0.y, -r0
rcp r0.z, r0.z
mul r0.y, r0.x, r0.z
min r0.z, r0.y, c10.y
max r0.w, r0.z, c10.x
add r0.w, -r0, c10.y
dp3 r0.x, r1.yxww, v2
dp3 r0.y, r1.zyww, v2
mov r0.z, v2
dp3 oT1.x, r0, c5
mul oT0.w, r0, c9
mov oT0.z, c10.x
mov oT0.x, v3.w
mov oT0.y, v4.w
mov oT1.w, c10.y
